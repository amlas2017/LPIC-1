******************************************************* SYSTEMD *****************************************************************
Le processus init se charge de lancer les services (daemons) et de mettre en place un environnement pour l’utilisateur (graphique, 
réseau, etc). Sa dernière action consiste généralement à présenter un écran d’authentification, laissant la main à l’utilisateur.
Un daemon est un processus qui tourne en arrière plan et qui supervise le système ou bien fournit des fonctionnalités à d’autres
processus.
Le processus init a un status particulier:
   --> Il est le tout premier processus appelé par le kernel (PID = 1).
   --> Il est le parent de tous les processus qui deviennent orphelins.
   --> Il reste vivant jusqu’à l’arrêt du système.
A l’arrêt du système, il est chargé de fermer tous les services et de quitter proprement.
Il existe différents processus init, dont les plus connus sont:
   -  SysVinit: processus init historique, hérité de UNIX System V.
   -  Upstart: sorti en 2006, à l’origine pour Ubuntu.
   -  Systemd: sorti en 2010.
Le fonctionnement de systemd diffère complètement de SysVinit et Upstart qui utilisaient principalement des scripts. 
Systemd permet une parallélisation des lancements des services et une activation à la demande de ceux-ci grâce à l’utilisation de 
sockets.

// La commande update-rc  ----> Ubuntu/Debian
update-rc.d met à jour automatiquement les liens vers les scripts d'initialisation de type Système V  dont  le nom est
/etc/rcrunlevel.d/NNnom vers les scripts /etc/init.d/name. Ils sont lancés par init quand on change de niveau de fonctionnement 
et ils sont  généralement utilisés  pour démarrer ou arrêter des services tels que les démons.
       nano /etc/init.d/mon_script
       chmod 755 /etc/init.d/mon_script
       update-rc.d mon_script defaults   -----> pour ajouter
       update-rc.d -f mon_script remove  -----> pour supprimer
       



// systemctl
systemctl -t help      ----> liste les unités disponibles sur le système.
systemctl list-units   ----->   liste toutes les unités présentes sur le système.
systemctl list-unit-files --type=service --all  -----> tous les services disponibles et leur statut (inactifs aussi).
systemctl is-active application.service.
systemctl --failed --type=service

systemd-analyze blame  ---->   lister le temps de démarrage des différents services.
systemd-cgls
systemd-cgtop



*****************************************************  DAEMON  ******************************************************************
Un daemon (démon) est un processus ou un ensemble de processus qui s'exécute en arrière-plan plutôt que sous le contrôle direct 
d'un user. un daemon UNIX peut être n'importe quel processus ayant le processus numéro 1 comme parent (init).
Les daemons sont souvent démarrés lors du chargement de l'OS, et servent en général à répondre à des requêtes du réseau, 
à l'activité du matériel ou à d'autres programmes en exécutant certaines tâches.


****************************************************PROCESSUS & THREADS  *********************************************************
Un processus est une instance d'un programme en cours d'exécution. Il contient les instructions du programme chargées en mémoire. 
Il possède un ou plusieurs threads exécutant des tâches spécifiques. 

Un processus peut contenir un ou plusieurs thread (applications dites multi-threadées) s'exécutant en quasi-simultanéité ou 
simultanément sur les processeurs multi-coeurs. 
A la différence des processus, les threads partage le même espace mémoire protégé, les mêmes ressources et le même espace mémoire.
**********************************************************************************************************************************

// La modularité du kernel ----> monolotique et modulaire ---> ajouter / enlever des modules. 

// Gestion manuelle des modules du kernel  ---->   commandes lsmod , rmmod , modprobe
lsmod | grep psmouse      <===>      modprobe -r psmouse   
 psmouse         147456  0    // psmouse = ps de la sourie
rmmod posmouse
modprobe psmouse   // charger le module

// utilitaires pour gestion de disques et partitions: cfdisk, gparted, fdisk / gdisk

// losetup -----> permet de gérer les périphériques de type loop
       losetup -a  -----> Liste les périphériques utilisés (comme: /dev/loop5)
       losetup -f ----> donne le numéro du prochain périphérique utilisable (dans notre exemple, le « 6 »).


